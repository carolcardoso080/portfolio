{"version":3,"file":"components/avatar/avatar.min.js","mappings":"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","sources":["webpack://core/webpack/universalModuleDefinition","webpack://core/./src/partial/js/behavior/collapse.js","webpack://core/./src/partial/js/behavior/dropdown.js","webpack://core/webpack/bootstrap","webpack://core/webpack/runtime/define property getters","webpack://core/webpack/runtime/hasOwnProperty shorthand","webpack://core/./src/components/avatar/avatar.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"core\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"core\"] = factory();\n\telse\n\t\troot[\"core\"] = factory();\n})(self, () => {\nreturn ","/** Classe para o comportamento Collapse */\nexport default class Collapse {\n  /**\n   * Instancia um comportamento collapse\n   * @param {object} - Objeto de configuração inicial para destructuring\n   * @property {object} trigger - Elemento DOM que representa o acionador do comportmento collapse\n   * @property {string} iconToShow - Classe que representa o ícone para mostrar o conteúdo (padrão: fa-chevron-down)\n   * @property {string} iconToHide - Classe que representa o ícone para esconder o conteúdo (padrão: fa-chevron-up)\n   * @property {boolean} useIcons - true: com ícone | false: sem ícone (padrão: true)\n   */\n  constructor({\n    trigger,\n    iconToShow = 'fa-chevron-down',\n    iconToHide = 'fa-chevron-up',\n    useIcons = true,\n  }) {\n    this.trigger = trigger\n    this.useIcons = useIcons\n    this.breakpoint = trigger.getAttribute('data-breakpoint')\n    this.setIconToShow(iconToShow)\n    this.setIconToHide(iconToHide)\n    this._setTarget()\n    this._setUp()\n  }\n\n  /**\n   * Determina qual elemento DOM é o alvo do comportamento collapse\n   * @private\n   */\n  _setTarget() {\n    this.target = document.querySelector(\n      `#${this.trigger.getAttribute('data-target')}`\n    )\n  }\n\n  // TODO: Melhorar a solução\n  _checkBreakpoint() {\n    if (this.breakpoint) {\n      if (window.matchMedia('(min-width: 977px)').matches) {\n        this.target.removeAttribute('hidden')\n      }\n    }\n  }\n\n  /**\n   * Trata a configuração inicial do comportamento collapse\n   * @private\n   */\n  _setUp() {\n    this._setVisibilityStatus()\n    if (this.useIcons) {\n      this._toggleIcon()\n    }\n    this.trigger.setAttribute(\n      'aria-controls',\n      `${this.trigger.getAttribute('data-target')}`\n    )\n    this._checkBreakpoint()\n     this.trigger.setAttribute('tabindex', '0');\n  }\n\n  /**\n   * Configura o estado de visualização do comportamento collapse\n   * @private\n   */\n  _setVisibilityStatus() {\n    this._setTriggerVisibilityStatus()\n    this._setTargetVisibilityStatus()\n  }\n\n  /**\n   * Trata o estado de visualização do acionador\n   * @private\n   */\n  _setTriggerVisibilityStatus() {\n    if (this.target) {\n      if (this.target.hasAttribute('hidden')) {\n        this.trigger.setAttribute('data-visible', false)\n        this.trigger.setAttribute('aria-expanded', false)\n        this.trigger.setAttribute('aria-label', 'recolhido')\n      } else {\n        this.trigger.setAttribute('data-visible', true)\n        this.trigger.setAttribute('aria-expanded', true)\n        this.trigger.setAttribute('aria-label', 'expandido')\n\n      }\n    }\n  }\n\n/**\n   * Handler para o evento de tecla pressionada (keydown) no acionador\n   * @private\n   */\n_handleTriggerKeyPress() {\n    this._handleTriggerClickBehavior();\n}\n\n\n/**\n * Configura o estado de visualização do comportamento collapse\n * @private\n */\n_setVisibilityStatus() {\n  this._setTriggerVisibilityStatus();\n  this._setTargetVisibilityStatus();\n}\n\n  /**\n   * Trata o estado de visualização do alvo\n   * @private\n   */\n  _setTargetVisibilityStatus() {\n    if (this.target) {\n      if (this.target.hasAttribute('hidden')) {\n        this.target.setAttribute('aria-hidden', true)\n      } else {\n        this.target.setAttribute('aria-hidden', false)\n      }\n    }\n  }\n\n  /**\n   * Handler para o evento de click no acionador do comportamento collapse\n   * Lança um evento 'change' a cada troca\n   * @private\n   */\n  _handleTriggerClickBehavior() {\n    if (this.breakpoint) {\n      if (window.matchMedia('(max-width: 977px)').matches) {\n        this._toggleVisibility()\n        if (this.useIcons) {\n          this._toggleIcon()\n        }\n        this.trigger.dispatchEvent(new Event('change'))\n      }\n    } else {\n      this._toggleVisibility()\n      if (this.useIcons) {\n        this._toggleIcon()\n      }\n      this.trigger.dispatchEvent(new Event('change'))\n    }\n  }\n\n  /**\n   * Alterna o estado de visualização do comportamento collapse\n   * @private\n   */\n  _toggleVisibility() {\n    if (this.target) {\n      this.target.hasAttribute('hidden')\n        ? this.target.removeAttribute('hidden')\n        : this.target.setAttribute('hidden', '')\n\n      this._setVisibilityStatus()\n    }\n  }\n\n  /**\n   * Troca o icone do acionador após uma mudança no estado de visualização do alvo\n   * Para o estado 'hidden' usa o iconToShow e para o estado 'shown' usa o iconToHide\n   * @public\n   */\n  _toggleIcon() {\n    this.trigger.querySelectorAll('i.fas').forEach((icon) => {\n      if (this.target) {\n        icon.classList.remove(\n          this.target.hasAttribute('hidden') ? this.iconToHide : this.iconToShow\n        )\n        icon.classList.add(\n          this.target.hasAttribute('hidden') ? this.iconToShow : this.iconToHide\n        )\n      }\n    })\n  }\n\n  /**\n   * Configura o comportamento collapse\n   * @public\n   */\n  setBehavior() {\n    this.trigger.addEventListener('click',(event)=>{\n      if(event.type === 'click'){\n        this._handleTriggerClickBehavior()\n      }\n    })\n    this.trigger.addEventListener('keydown',(event)=>{\n      if (event.key === 'Enter' || event.key === ' ') {\n        event.preventDefault()\n        this._handleTriggerKeyPress()\n      }\n    });\n  }\n\n  /**\n   * Determina a classe do icone para mostrar o conteúdo\n   * @param {string} iconToShow - Classe que representa o ícone para mostrar o conteúdo\n   * @public\n   */\n  setIconToShow(iconToShow) {\n    this.iconToShow = iconToShow\n  }\n\n  /**\n   * Determina a classe do ícone para esconder o conteúdo\n   * @param {string} iconToHide - Classe que representa o ícone para esconder o conteúdo\n   * @public\n   */\n  setIconToHide(iconToHide) {\n    this.iconToHide = iconToHide\n  }\n}\n","import Collapse from './collapse'\n\n/**\n * Classe para o comportamento Dropdown.\n * O Comportamento Dropdown é um caso especial do comportamentos Collapse\n * em que o alvo aparece flutuando na tela.\n * Nesse caso o alvo precisa filho de um elemento pai\n */\nexport default class Dropdown extends Collapse {\n  /**\n   * Instancia um comportamento accordion\n   * @param {object} - Objeto de configuração inicial para destructuring\n   * @property {object} trigger - Elemento DOM que representa o acionador do comportmento accordion\n   * @property {string} iconToShow - Classe que representa o ícone para mostrar o conteúdo (padrão: fa-chevron-down)\n   * @property {string} iconToHide - Classe que representa o ícone para esconder o conteúdo (padrão: fa-chevron-up)\n   * @property {boolean} useIcons - true: com ícone | false: sem ícone (padrão: true)\n   */\n  constructor({\n    trigger,\n    iconToShow = 'fa-chevron-down',\n    iconToHide = 'fa-chevron-up',\n    useIcons = true,\n  }) {\n    super({ iconToHide, iconToShow, trigger, useIcons })\n  }\n\n  /**\n   * Trata a configuração inicial do comportamento dropdown\n   * @override\n   * @private\n   */\n  _setUp() {\n    super._setUp()\n    this._hideDropdown()\n    this._initializeDropdownItems();\n  }\n\n  /**\n   * Oculta o dropdown ao clicar fora do acionador e do alvo\n   * @private\n   */\n  _hideDropdown() {\n    document.addEventListener('mousedown', (event) => {\n      if (\n        !this.trigger.contains(event.target) &&\n        !this.target.hasAttribute('hidden') &&\n        !this.target.contains(event.target)\n      ) {\n        this.trigger.click()\n      }\n    })\n  }\n\n  /**\n   * Marca o alvo com o atributo data-dropdown\n   * @override\n   * @private\n   */\n  _setTargetVisibilityStatus() {\n    super._setTargetVisibilityStatus()\n    if (this.target.hasAttribute('hidden')) {\n      this.target.removeAttribute('data-dropdown')\n    } else {\n      this.target.setAttribute('data-dropdown', '')\n    }\n  }\n\n  /**\n   * Trata o estado de visualização do pai do alvo\n   * @private\n   */\n  _setParentsTargetVisibilityStatus() {\n    if (this.target.hasAttribute('hidden')) {\n      this.target.parentElement.classList.remove('dropdown')\n    } else {\n      this.target.parentElement.classList.add('dropdown')\n    }\n  }\n\n  /**\n * Para itens pertencentes a dropdown do tipo menuitem, permite\n * o uso das teclas de seta para cima e para baixo do teclado.\n * @private\n */\n  _initializeDropdownItems() {\n    this.dropdownItems = Array.from(this.target.querySelectorAll('[role=\"menuitem\"]'));\n    this.dropdownItems.forEach((item) => {\n      item.addEventListener('keydown', (event) => {\n        const key = event.key;\n        const currentIndex = this.dropdownItems.indexOf(item);\n        const lastIndex = this.dropdownItems.length - 1;\n\n        switch (key) {\n          case 'ArrowUp':\n            event.preventDefault();\n            const prevIndex = (currentIndex - 1 + this.dropdownItems.length) % this.dropdownItems.length;\n            this.dropdownItems[prevIndex].focus();\n            break;\n          case 'ArrowDown':\n            event.preventDefault();\n            const nextIndex = (currentIndex + 1) % this.dropdownItems.length;\n            this.dropdownItems[nextIndex].focus();\n            break;\n          default:\n            break;\n        }\n      });\n    });\n  }\n\n\n  /**\n   * Handler para o evento de click no acionador do comportamento dropdown\n   * Lança um evento 'change' a cada troca\n   * @override\n   * @private\n   */\n  _handleTriggerClickBehavior() {\n    super._handleTriggerClickBehavior()\n    this._setParentsTargetVisibilityStatus()\n  }\n\n  /**\n   * Configura o comportamento dropdown\n   * @override\n   * @public\n   */\n  setBehavior() {\n    super.setBehavior()\n  }\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import Dropdown from '../../partial/js/behavior/dropdown'\n\n/**\n * Classe para o exemplo do comportamento dropdown\n */\nclass BRAvatar {\n  /**\n   * Instancia um exemplo de comportamento dropdown\n   * @param {string} name - Nome do componente\n   * @param {object} component - Referência ao objeto do DOM\n   */\n  constructor(name, component) {\n    this.name = name\n    this.component = component\n    this._setBehavior()\n  }\n\n  /**\n   * Define os comportamentos do componente\n   * @private\n   */\n  _setBehavior() {\n    this._setDropdownBehavior()\n  }\n\n  /**\n   * Define os comportamentos do dropdown\n   * @private\n   */\n  _setDropdownBehavior() {\n    if (this.component.parentElement.dataset.toggle === 'dropdown') {\n      const config = {\n        iconToHide: 'fa-caret-up',\n        iconToShow: 'fa-caret-down',\n        trigger: this.component.parentElement,\n        useIcons: true,\n      }\n      const dropdown = new Dropdown(config)\n      dropdown.setBehavior()\n    }\n  }\n}\n\nexport default BRAvatar\n"],"names":["webpackUniversalModuleDefinition","root","factory","exports","module","define","amd","self","Collapse","constructor","trigger","iconToShow","iconToHide","useIcons","this","breakpoint","getAttribute","setIconToShow","setIconToHide","_setTarget","_setUp","target","document","querySelector","_checkBreakpoint","window","matchMedia","matches","removeAttribute","_setVisibilityStatus","_toggleIcon","setAttribute","_setTriggerVisibilityStatus","_setTargetVisibilityStatus","hasAttribute","_handleTriggerKeyPress","_handleTriggerClickBehavior","_toggleVisibility","dispatchEvent","Event","querySelectorAll","forEach","icon","classList","remove","add","setBehavior","addEventListener","event","type","key","preventDefault","Dropdown","super","_hideDropdown","_initializeDropdownItems","contains","click","_setParentsTargetVisibilityStatus","parentElement","dropdownItems","Array","from","item","currentIndex","indexOf","lastIndex","length","prevIndex","focus","nextIndex","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","BRAvatar","name","component","_setBehavior","_setDropdownBehavior","dataset","toggle","config","dropdown"],"sourceRoot":""}